name: Build and Deploy

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install ImageMagick (for icon generation)
        run: brew install imagemagick

      - name: Generate icons
        run: npm run icons

      - name: Build frontend
        run: npm run build

      - name: Build Electron app
        env:
          # Code signing (optional - set these in GitHub Secrets)
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
        run: npm run electron:build -- --mac

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            dist-electron/*.dmg
            dist-electron/*.zip

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist-electron/*.dmg
            dist-electron/*.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Optional: Deploy to custom server
  deploy:
    needs: build-macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-app

      - name: Deploy to S3 (optional)
        if: env.AWS_ACCESS_KEY_ID != ''
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1
        run: |
          aws s3 cp *.dmg s3://your-bucket/releases/ --recursive
          aws s3 cp *.zip s3://your-bucket/releases/ --recursive

      - name: Send notification (optional)
        if: success()
        run: |
          # Send Slack/Discord notification
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"New release deployed!"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}
          echo "Deployment successful!"
